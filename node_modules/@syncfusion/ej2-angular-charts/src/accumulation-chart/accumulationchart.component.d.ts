import { ElementRef, ViewContainerRef, Renderer2, Injector } from '@angular/core';
import { IComponentBase } from '@syncfusion/ej2-angular-base';
import { AccumulationChart } from '@syncfusion/ej2-charts';
import * as ɵngcc0 from '@angular/core';
export declare const inputs: string[];
export declare const outputs: string[];
export declare const twoWays: string[];
/**
 * AccumulationChart Component
 * ```html
 * <ejs-accumulationchart></ejs-accumulationchart>
 * ```
 */
export declare class AccumulationChartComponent extends AccumulationChart implements IComponentBase {
    private ngEle;
    private srenderer;
    private viewContainerRef;
    private injector;
    childSeries: any;
    childAnnotations: any;
    tags: string[];
    dataSourceChange: any;
    tooltip_template: any;
    constructor(ngEle: ElementRef, srenderer: Renderer2, viewContainerRef: ViewContainerRef, injector: Injector);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngAfterContentChecked(): void;
    registerEvents: (eventList: string[]) => void;
    addTwoWay: (propList: string[]) => void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AccumulationChartComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AccumulationChartComponent, "ejs-accumulationchart", never, {
    "annotations": "annotations";
    "background": "background";
    "backgroundImage": "backgroundImage";
    "border": "border";
    "center": "center";
    "currencyCode": "currencyCode";
    "dataSource": "dataSource";
    "enableAnimation": "enableAnimation";
    "enableBorderOnMouseMove": "enableBorderOnMouseMove";
    "enableExport": "enableExport";
    "enablePersistence": "enablePersistence";
    "enableRtl": "enableRtl";
    "enableSmartLabels": "enableSmartLabels";
    "height": "height";
    "isMultiSelect": "isMultiSelect";
    "legendSettings": "legendSettings";
    "locale": "locale";
    "margin": "margin";
    "selectedDataIndexes": "selectedDataIndexes";
    "selectionMode": "selectionMode";
    "series": "series";
    "subTitle": "subTitle";
    "subTitleStyle": "subTitleStyle";
    "theme": "theme";
    "title": "title";
    "titleStyle": "titleStyle";
    "tooltip": "tooltip";
    "useGroupingSeparator": "useGroupingSeparator";
    "width": "width";
}, {
    "animationComplete": "animationComplete";
    "annotationRender": "annotationRender";
    "beforePrint": "beforePrint";
    "chartMouseClick": "chartMouseClick";
    "chartMouseDown": "chartMouseDown";
    "chartMouseLeave": "chartMouseLeave";
    "chartMouseMove": "chartMouseMove";
    "chartMouseUp": "chartMouseUp";
    "legendRender": "legendRender";
    "load": "load";
    "loaded": "loaded";
    "pointClick": "pointClick";
    "pointMove": "pointMove";
    "pointRender": "pointRender";
    "resized": "resized";
    "seriesRender": "seriesRender";
    "textRender": "textRender";
    "tooltipRender": "tooltipRender";
    "dataSourceChange": "dataSourceChange";
}, ["tooltip_template", "childSeries", "childAnnotations"]>;
}

//# sourceMappingURL=accumulationchart.component.d.ts.map